" ==================== PLUGINS ==================== "
call plug#begin()

Plug 'ctrlpvim/ctrlp.vim'                         " Ctrl+P - File search/jump/navigator
Plug 'scrooloose/nerdtree'                        " Visual file browser
Plug 'neoclide/coc.nvim', {'branch': 'release'}   " Autocompletion
Plug 'Chiel92/vim-autoformat'                     " Autoformat
Plug 'mhinz/vim-signify'                          " Git gutter support
Plug 'tpope/vim-fugitive'                         " Vim git integration
Plug 'Xuyuanp/nerdtree-git-plugin'                " Git support for NERDTree
Plug 'preservim/nerdcommenter'                    " Block comment code tools
Plug 'Vimjas/vim-python-pep8-indent'              " Nicer indent for pep8
Plug 'vim-airline/vim-airline'                    " Vim statusline
Plug 'vim-airline/vim-airline-themes'             " Airline themes
Plug 'google/vim-jsonnet'                         " Jsonnet support
Plug 'hashivim/vim-terraform'                     " Terraform support
Plug 'rust-lang/rust.vim'                         " Rust support
Plug 'vim-test/vim-test'                          " Run tests from within vim
Plug 'leafgarland/typescript-vim'                 " Typescript support
Plug 'peitalin/vim-jsx-typescript'                " React jsx syntax
Plug 'crusoexia/vim-monokai'                      " Monokai theme
Plug 'junegunn/fzf', { 'do': { -> fzf#install() } } " fzf installer
Plug 'junegunn/fzf.vim'                           " fuzzy file searcher & ripgrep integration

call plug#end()

" ==================== GENERAL SETTINGS ==================== "

syntax enable " Enable syntax hilighting
colorscheme monokai " Enable monokai theme

set mouse=a                    " Set mouse mode on
set nocompatible               " Disable backwards comp with Vi (needed)
set textwidth=80               " Set right edge margin
set tabstop=2                  " Set tab press to do 2 spaces
set shiftwidth=2               " Set >>  << to indent by 2 spaces
set expandtab                  " Use spaces for tabs
set laststatus=2               " Always show statusline
set number                     " Show line numbers
set backspace=2                " Normal backspace functionality
set showtabline=0              " Hide top bar (buffer/tabline)
set timeoutlen=1000            " Snappier timeout for commands
set ttimeoutlen=0              " Helps fast <Esc>
set hlsearch                   " Highlight search matches
set cursorline                 " Highlight current line
set undodir=$HOME/.vim/undo    " Where to save undo histories
set undofile                   " Save undo's after file closes
set undolevels=1000            " How many undos
set undoreload=10000           " Number of lines to save
set updatetime=100             " Async update frequency (default 4000ms)
set incsearch                  " Search as you type
set nomodeline                 " Safe-guard from unsecure code execution
set clipboard+=unnamedplus     " Yank to the system clipboard

" Set highlight color for Search match to replace monokai theme default
hi Search cterm=none ctermbg=240

" ==================== LANGUAGE SETTINGS ==================== "

" Disable python 2 provider
let g:loaded_python_provider = 0

" Neovim python environments, see :help provider-python
"let g:python3_host_prog = '/home/jakob/.venv/nvim3/bin/python'

" ==================== KEYBINDINGS ==================== "

let mapleader="\\"

" Jump between last files with C-o instead of C-6
nnoremap <C-o> :e #<CR>

" Save buffer on C-s
nnoremap <silent> <C-s> :update<CR>
inoremap <silent> <C-s> <Esc>:update<CR>
vnoremap <silent> <C-s> <C-o>:update<CR>

" Toggle NERDTree explorer
map <silent> <C-I> :NERDTreeToggle<CR>

" Un-highlight
noremap <silent> <Leader>z :noh<CR>

" Normal mode in terminal mode
tmap <C-n> <C-\><C-n>


" ==================== PLUGIN SETTINGS ==================== "

" coc.nvim

function! s:check_back_space() abort
  let col = col('.') - 1
  return !col || getline('.')[col - 1]  =~# '\s'
endfunction

inoremap <silent><expr> <TAB>
      \ pumvisible() ? "\<C-n>" :
      \ <SID>check_back_space() ? "\<TAB>" :
      \ coc#refresh()
inoremap <expr><S-TAB> pumvisible() ? "\<C-p>" : "\<C-h>"
inoremap <silent><expr> <c-space> coc#refresh()

nnoremap <silent><nowait> <space>a  :<C-u>CocList diagnostics<cr>

nmap <leader>rn <Plug>(coc-rename)

nmap <silent> [g <Plug>(coc-diagnostic-prev)
nmap <silent> ]g <Plug>(coc-diagnostic-next)

nmap <silent> gd <Plug>(coc-definition)
nmap <silent> gy <Plug>(coc-type-definition)
nmap <silent> gi <Plug>(coc-implementation)
nmap <silent> gr <Plug>(coc-references)

hi! link CocFloating ColorColumn
hi! CocErrorFloat ctermfg=1* ctermbg=235
hi! CocInfoSign ctermfg=6*

" CtrlP
if executable('rg')
  set grepprg=rg\ --color=never
  let g:ctrlp_user_command = 'rg %s --files --color=never --glob ""'
  let g:ctrlp_use_caching = 0
else
  let g:ctrlp_clear_cache_on_exit = 0
endif

let g:ctrlp_custom_ignore = {
  \ 'dir': '\v[\/]\.(git)$',
  \ 'file': '\v\.(pyc|so|dll)$'
  \ }

" NERDTree

let NERDTreeIgnore = ['\.pyc$', '\.swp$', '\.swo$', '__pycache__', '\.egg-info$']

" Autoformat

let g:formatdef_isort = '"isort --settings-file ~/code/platform/ci/pyhelp/pyproject.toml - 2> /dev/null"'
let g:formatdef_jfmt = '"jsonnet fmt -n 4 --string-style d --no-pad-arrays -"'
let g:formatters_python = ['isort']
let g:formatters_jsonnet = ['jfmt']
let g:autoformat_autoindent = 0
let g:autoformat_retab = 0

" vim-jsonnet

let g:jsonnet_fmt_on_save = 0

" signify

nnoremap <leader>hu :SignifyHunkUndo<CR>

" Airline

let g:airline_powerline_fonts = 1
let g:airline_theme = 'deus'
let g:airline#extensions#tabline#enabled = 0
let g:airline#parts#ffenc#skip_expected_string='utf-8[unix]'
let g:airline#extensions#hunks#enabled = 0
let g:airline#extensions#coc#error_symbol = ':'
let g:airline#extensions#coc#warning_symbol = ':'
let g:airline#extensions#coc#info_symbol = ':'

" Vim-test

let test#strategy = "neovim"

nmap <silent> <C-t><C-t> :TestNearest -vvvs<CR>
nmap <silent> <C-t>f :TestFile<CR>
nmap <silent> <C-t>l :TestLast<CR>

" ==================== CUSTOM COMMANDS ==================== "


" ==================== FUNCTIONS ====================== "


" ==================== BUFFER SETTINGS ==================== " :
augroup CustomAU
  autocmd!

  au FileType python
    \ set shiftwidth=4
    \| set softtabstop=4
    \| set textwidth=79
    \| set colorcolumn=+1
    \| au! BufWritePre <buffer> :silent Autoformat

  au FileType jsonnet
        \  set textwidth=100
        \| set shiftwidth=4
        \| set softtabstop=4
        \| au! BufWritePre <buffer> :silent Autoformat

  " Adapt rust tabs and line length.
  au FileType rust
        \  set textwidth=100
        \| set shiftwidth=4
        \| set softtabstop=4
        \| au! BufWritePre <buffer> :silent Autoformat

  au FileType typescript
        \  set textwidth=100
        \| set shiftwidth=2
        \| set softtabstop=2

  au FileType typescriptreact
        \  set textwidth=100
        \| set shiftwidth=2
        \| set softtabstop=2

  au FileType sql
        \  set shiftwidth=2

  au BufWritePre * :%s/\s\+$//e

  " Custom filetypes
  au BufNewFile,BufRead *.sls set syntax=yaml
augroup END
